name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (optioneel, mag ook tijdelijk 'npm run lint' zijn)
        run: echo "⚠️ Nog geen test setup, overslaan"
        #run: npm test
  build:
    name: Build & Test ELK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Images
        run: docker compose build

      - name: Set environment variables from GitHub Secrets
        run: |
          echo "ELASTICSEARCH_USER=${{ secrets.ELASTICSEARCH_USER }}" >> $GITHUB_ENV    
          echo "ELASTICSEARCH_PASSWORD=${{ secrets.ELASTICSEARCH_PASSWORD }}" >> $GITHUB_ENV

      - name: Test Docker Compose
        run: |
          docker compose up -docker
          sleep 10
          docker ps
          docker inspect --format='{{json .State.Health}}' $(docker ps -q) | jq
          docker compose down

    # deploy:
    #   name: Deploy To Server
    #   needs: build
    #   runs-on: ubuntu-latest
    #   environment: environment

  deploy:
    name: Deploy To Server
    needs: build
    runs-on: ubuntu-latest
    environment: environment

    steps:
      - name: Setup SSH Connection
        uses: appleboy/ssh-action@v1.1.0
        with:
          debug: true
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/crmV2
            git pull origin main
            docker compose down
            docker compose up -d --build
