name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (optioneel, mag ook tijdelijk 'npm run lint' zijn)
        run: echo "⚠️ Nog geen test setup, overslaan"
        #run: npm test
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t crm-service:latest .

      - name: Save Docker image as tarball
        run: docker save crm-service:latest -o crm-service.tar

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy Docker image to server
        run: scp -P 60022 -o StrictHostKeyChecking=no crm-service.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/tmp/crm-service.tar

      - name: SSH into server and deploy
        run: |
          ssh -p 60022 -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            docker load -i /tmp/crm-service.tar
            # Stop current container
            docker stop crm-service || true
            docker rm crm-service || true
            # Navigate to deployment folder and run compose
            cd ~/crmV2
            docker compose --env-file .env.production up -d --build
          EOF


